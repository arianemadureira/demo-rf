<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.3 on win32)" generated="20200707 08:49:39.323" rpa="false">
<suite id="s1" name="TestCasesAPIRequests" source="C:\Users\ariane.madureira\Documents\SONAE\testesrobotframework-master\testesrobotframework-master\Demos\DemoAPI\TestCasesAPIRequests.robot">
<test id="s1-t1" name="Cenário 01: Consulta de endereço existente">
<kw name="Given que esteja conectado no webservice de consultas de CEP" library="Resource">
<kw name="Conecta ao WebService" library="Resource">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>consultaCEP</arg>
<arg>${HOST}</arg>
<arg>verify=True</arg>
</arguments>
<msg timestamp="20200707 08:49:40.158" level="INFO">Creating Session using : alias=consultaCEP, url=https://webmaniabr.com/api/1/cep, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20200707 08:49:40.158" endtime="20200707 08:49:40.158"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:40.158" endtime="20200707 08:49:40.159"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:40.157" endtime="20200707 08:49:40.159"></status>
</kw>
<kw name="When o usuário consultar o CEP &quot;88056-000&quot;" library="Resource">
<kw name="Realiza requisição do CEP" library="Resource">
<arguments>
<arg>${CEP_CONSULTADO}</arg>
</arguments>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>consultaCEP</arg>
<arg>/${CEP_DESEJADO}/?app_key=${APP_KEY}&amp;app_secret=${APP_SECRET}</arg>
</arguments>
<assign>
<var>${RESPOSTA}</var>
</assign>
<msg timestamp="20200707 08:49:41.064" level="INFO">GET Request : url=https://webmaniabr.com/api/1/cep/88056-000/?app_key=njMf2EiyQ17g6C3vLUxk1yEsWTforVqf&amp;app_secret=EgpTuUcM93IqHY8icgR3cK6Cn4bOlkQwSlfLd6ryMjrhhwMW 
 path_url=/api/1/cep/88056-000/?app_key=njMf2EiyQ17g6C3vLUxk1yEsWTforVqf&amp;app_secret=EgpTuUcM93IqHY8icgR3cK6Cn4bOlkQwSlfLd6ryMjrhhwMW 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200707 08:49:41.064" level="INFO">GET Response : url=https://webmaniabr.com/api/1/cep/88056-000/?app_key=njMf2EiyQ17g6C3vLUxk1yEsWTforVqf&amp;app_secret=EgpTuUcM93IqHY8icgR3cK6Cn4bOlkQwSlfLd6ryMjrhhwMW 
 status=200, reason=OK 
 body={"endereco":"Avenida Luiz Boiteux Piazza","bairro":"Cachoeira do Bom Jesus","cidade":"Florianópolis","uf":"SC","cep":"88056000","ibge":"4205407"} 
 </msg>
<msg timestamp="20200707 08:49:41.065" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200707 08:49:40.159" endtime="20200707 08:49:41.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Resposta: ${RESPOSTA.text}</arg>
</arguments>
<msg timestamp="20200707 08:49:41.065" level="INFO">Resposta: {"endereco":"Avenida Luiz Boiteux Piazza","bairro":"Cachoeira do Bom Jesus","cidade":"Florianópolis","uf":"SC","cep":"88056000","ibge":"4205407"}</msg>
<status status="PASS" starttime="20200707 08:49:41.065" endtime="20200707 08:49:41.065"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPOSTA}</arg>
</arguments>
<msg timestamp="20200707 08:49:41.065" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200707 08:49:41.065" endtime="20200707 08:49:41.066"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:40.159" endtime="20200707 08:49:41.066"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:40.159" endtime="20200707 08:49:41.066"></status>
</kw>
<kw name="Then deve ser mostrado o endereço &quot;Avenida Luiz Boiteux Piazza&quot;" library="Resource">
<kw name="Confere o status code" library="Resource">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPOSTA.status_code}</arg>
<arg>${STATUS_ESPERADO}</arg>
</arguments>
<msg timestamp="20200707 08:49:41.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200707 08:49:41.066" endtime="20200707 08:49:41.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status Code Retornado: ${RESPOSTA.status_code} -- Status Code Esperado: ${STATUS_ESPERADO}</arg>
</arguments>
<msg timestamp="20200707 08:49:41.067" level="INFO">Status Code Retornado: 200 -- Status Code Esperado: 200</msg>
<status status="PASS" starttime="20200707 08:49:41.067" endtime="20200707 08:49:41.067"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.066" endtime="20200707 08:49:41.067"></status>
</kw>
<kw name="Confere endereço do CEP" library="Resource">
<arguments>
<arg>${ENDERECO}</arg>
</arguments>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPOSTA.json()}</arg>
<arg>endereco</arg>
<arg>${ENDERECO}</arg>
</arguments>
<status status="PASS" starttime="20200707 08:49:41.068" endtime="20200707 08:49:41.068"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.067" endtime="20200707 08:49:41.068"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.066" endtime="20200707 08:49:41.068"></status>
</kw>
<kw name="AND deve ser mostrado o bairro &quot;Cachoeira do Bom Jesus&quot;" library="Resource">
<kw name="Confere bairro do CEP" library="Resource">
<arguments>
<arg>${BAIRRO}</arg>
</arguments>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPOSTA.json()}</arg>
<arg>bairro</arg>
<arg>${BAIRRO}</arg>
</arguments>
<status status="PASS" starttime="20200707 08:49:41.069" endtime="20200707 08:49:41.069"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.068" endtime="20200707 08:49:41.069"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.068" endtime="20200707 08:49:41.069"></status>
</kw>
<kw name="AND deve ser mostrada a cidade &quot;Florianópolis&quot;" library="Resource">
<kw name="Confere cidade do CEP" library="Resource">
<arguments>
<arg>${CIDADE}</arg>
</arguments>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPOSTA.json()}</arg>
<arg>cidade</arg>
<arg>${CIDADE}</arg>
</arguments>
<status status="PASS" starttime="20200707 08:49:41.070" endtime="20200707 08:49:41.070"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.069" endtime="20200707 08:49:41.070"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.069" endtime="20200707 08:49:41.070"></status>
</kw>
<kw name="AND deve ser mostrada a UF &quot;SC&quot;" library="Resource">
<kw name="Confere UF do CEP" library="Resource">
<arguments>
<arg>${UF}</arg>
</arguments>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPOSTA.json()}</arg>
<arg>uf</arg>
<arg>${UF}</arg>
</arguments>
<status status="PASS" starttime="20200707 08:49:41.071" endtime="20200707 08:49:41.071"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.071" endtime="20200707 08:49:41.071"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.070" endtime="20200707 08:49:41.071"></status>
</kw>
<kw name="AND deve ser mostrado o CEP &quot;88056000&quot;" library="Resource">
<kw name="Confere CEP" library="Resource">
<arguments>
<arg>${CEP}</arg>
</arguments>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPOSTA.json()}</arg>
<arg>cep</arg>
<arg>${CEP}</arg>
</arguments>
<status status="PASS" starttime="20200707 08:49:41.072" endtime="20200707 08:49:41.072"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.072" endtime="20200707 08:49:41.072"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.071" endtime="20200707 08:49:41.073"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:40.157" endtime="20200707 08:49:41.073" critical="yes"></status>
</test>
<test id="s1-t2" name="Cenário 03: Consulta de endereço inexistente">
<kw name="Given que esteja conectado no webservice de consultas de CEP" library="Resource">
<kw name="Conecta ao WebService" library="Resource">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>consultaCEP</arg>
<arg>${HOST}</arg>
<arg>verify=True</arg>
</arguments>
<msg timestamp="20200707 08:49:41.074" level="INFO">Creating Session using : alias=consultaCEP, url=https://webmaniabr.com/api/1/cep, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20200707 08:49:41.074" endtime="20200707 08:49:41.074"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.074" endtime="20200707 08:49:41.074"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.073" endtime="20200707 08:49:41.074"></status>
</kw>
<kw name="When o usuário consultar o CEP &quot;99999-999&quot;" library="Resource">
<kw name="Realiza requisição do CEP" library="Resource">
<arguments>
<arg>${CEP_CONSULTADO}</arg>
</arguments>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>consultaCEP</arg>
<arg>/${CEP_DESEJADO}/?app_key=${APP_KEY}&amp;app_secret=${APP_SECRET}</arg>
</arguments>
<assign>
<var>${RESPOSTA}</var>
</assign>
<msg timestamp="20200707 08:49:42.340" level="INFO">GET Request : url=https://webmaniabr.com/api/1/cep/99999-999/?app_key=njMf2EiyQ17g6C3vLUxk1yEsWTforVqf&amp;app_secret=EgpTuUcM93IqHY8icgR3cK6Cn4bOlkQwSlfLd6ryMjrhhwMW 
 path_url=/api/1/cep/99999-999/?app_key=njMf2EiyQ17g6C3vLUxk1yEsWTforVqf&amp;app_secret=EgpTuUcM93IqHY8icgR3cK6Cn4bOlkQwSlfLd6ryMjrhhwMW 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20200707 08:49:42.340" level="INFO">GET Response : url=https://webmaniabr.com/api/1/cep/99999-999/?app_key=njMf2EiyQ17g6C3vLUxk1yEsWTforVqf&amp;app_secret=EgpTuUcM93IqHY8icgR3cK6Cn4bOlkQwSlfLd6ryMjrhhwMW 
 status=200, reason=OK 
 body={"error":"CEP INVÁLIDO"} 
 </msg>
<msg timestamp="20200707 08:49:42.340" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200707 08:49:41.075" endtime="20200707 08:49:42.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Resposta: ${RESPOSTA.text}</arg>
</arguments>
<msg timestamp="20200707 08:49:42.340" level="INFO">Resposta: {"error":"CEP INVÁLIDO"}</msg>
<status status="PASS" starttime="20200707 08:49:42.340" endtime="20200707 08:49:42.340"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RESPOSTA}</arg>
</arguments>
<msg timestamp="20200707 08:49:42.341" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200707 08:49:42.340" endtime="20200707 08:49:42.341"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.075" endtime="20200707 08:49:42.341"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.075" endtime="20200707 08:49:42.341"></status>
</kw>
<kw name="Then a mensagem de erro &quot;CEP INVÁLIDO&quot; deve ser retornada" library="Resource">
<kw name="Confere o status code" library="Resource">
<arguments>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RESPOSTA.status_code}</arg>
<arg>${STATUS_ESPERADO}</arg>
</arguments>
<msg timestamp="20200707 08:49:42.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200707 08:49:42.342" endtime="20200707 08:49:42.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status Code Retornado: ${RESPOSTA.status_code} -- Status Code Esperado: ${STATUS_ESPERADO}</arg>
</arguments>
<msg timestamp="20200707 08:49:42.342" level="INFO">Status Code Retornado: 200 -- Status Code Esperado: 200</msg>
<status status="PASS" starttime="20200707 08:49:42.342" endtime="20200707 08:49:42.342"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:42.341" endtime="20200707 08:49:42.342"></status>
</kw>
<kw name="Confere mensagem de erro" library="Resource">
<arguments>
<arg>${MSG_ERRO}</arg>
</arguments>
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<arguments>
<arg>${RESPOSTA.json()}</arg>
<arg>error</arg>
<arg>${MSG_ERRO}</arg>
</arguments>
<status status="PASS" starttime="20200707 08:49:42.343" endtime="20200707 08:49:42.343"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:42.343" endtime="20200707 08:49:42.343"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:42.341" endtime="20200707 08:49:42.344"></status>
</kw>
<status status="PASS" starttime="20200707 08:49:41.073" endtime="20200707 08:49:42.344" critical="yes"></status>
</test>
<doc>Suíte de Exemplo de testes API com o Robot Framework</doc>
<status status="PASS" starttime="20200707 08:49:39.325" endtime="20200707 08:49:42.344"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="TestCasesAPIRequests">TestCasesAPIRequests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
